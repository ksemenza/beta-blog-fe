[{"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\index.js":"1","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Post.jsx":"2","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\utils\\PrivateRouter.jsx":"3","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\state-actions\\user-action.jsx":"4","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Header.jsx":"5","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\PostModel.jsx":"6","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Login.jsx":"7","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\state-actions\\post-action.jsx":"8","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\constants\\inital-states.js":"9","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\PostAdd.jsx":"10"},{"size":905,"mtime":1607472707372,"results":"11","hashOfConfig":"12"},{"size":1888,"mtime":1607542448377,"results":"13","hashOfConfig":"12"},{"size":468,"mtime":1607472889145,"results":"14","hashOfConfig":"12"},{"size":3016,"mtime":1607527963136,"results":"15","hashOfConfig":"12"},{"size":467,"mtime":1607473893722,"results":"16","hashOfConfig":"12"},{"size":211,"mtime":1607529839783,"results":"17","hashOfConfig":"12"},{"size":2269,"mtime":1607472707370,"results":"18","hashOfConfig":"12"},{"size":2186,"mtime":1607542433950,"results":"19","hashOfConfig":"12"},{"size":352,"mtime":1607541416649,"results":"20","hashOfConfig":"12"},{"size":3530,"mtime":1607542727537,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tyi6e6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\index.js",[],["45","46"],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Post.jsx",["47","48","49"],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\utils\\PrivateRouter.jsx",[],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\state-actions\\user-action.jsx",["50","51"],"import axios from 'axios'\r\nimport React from 'react'\r\nimport {axiosAuth} from '../api/axiosAuth'\r\nimport {LOCAL_URL, REGISTER_URL, LOGIN_URL} from '../constants/endpoints'\r\n\r\n\r\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\r\n\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nlet userID\r\n\r\n//REGISTER USER START\r\nexport const registerUser = (newUser, history) => dispatch => {\r\n    console.log(`action register`)\r\n    dispatch({ type: REGISTER_REQUEST });\r\n    axios\r\n      .post(`${LOCAL_URL}${REGISTER_URL}`, newUser)\r\n      .then(res => {\r\n        dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n        localStorage.setItem('token',res.data.token)\r\n        history.push(\"/\");\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: REGISTER_FAILURE, payload:err.res });\r\n      });\r\n  };\r\n  \r\n  //LOGIN USER START\r\n  export const loginUser = (user, history) => dispatch => {\r\n    dispatch({ type: LOGIN_REQUEST });\r\n    axiosAuth().post(`${LOGIN_URL}`, user )\r\n    \r\n      .then(res => {\r\n          console.log(res.data.user.password)\r\n        localStorage.setItem('token', res.data.token)\r\n        localStorage.setItem('user_id', res.data.user.id)\r\n        localStorage.setItem('fname', res.data.user.first_name)\r\n        localStorage.setItem('lname', res.data.user.last_name)\r\n        localStorage.setItem('username', res.data.user.username)\r\n        localStorage.setItem('email', res.data.user.email)\r\n        localStorage.setItem('password', res.data.user.password)\r\n\r\n        dispatch({type:LOGIN_SUCCESS, payload: res.data})  \r\n        history.push('/homepage')\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: LOGIN_FAILURE, payload: err.res });\r\n      });\r\n  };\r\n  //LOGOUT USER START\r\n  export const logoutUser = (user, history) => dispatch => {\r\n    dispatch({ type: LOGOUT_REQUEST });\r\n    localStorage.removeItem(\"token\");\r\n    const tokenCheck = localStorage.getItem(\"token\");\r\n    if (tokenCheck === null) {\r\n      dispatch({ type: LOGOUT_SUCCESS })      \r\n    } else {\r\n      dispatch({ type: LOGOUT_FAILURE });\r\n    }\r\n  };\r\n\r\n    //CABINET USER START\r\n\r\n\r\n    /*\r\n    export const cabinetUser = (cabinet, history) => dispatch => {\r\n      let user_id = localStorage.get('user_id', res.data.id)\r\n      dispatch({ type: LOGIN_REQUEST });\r\n      axios.post(`http://localhost:7000/api/strains/${usre}`, cabinet )\r\n        .then(res => {\r\n          localStorage.setItem('user_id', res.data.id)\r\n          dispatch({type:CABINET_SUCCESS, payload: res.data})  \r\n          history.push('/cabinet')\r\n        })\r\n        .catch(err => {\r\n          dispatch({ type: CABINET_FAILURE, payload: err.data });\r\n        });\r\n    };\r\n  */","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Header.jsx",[],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\PostModel.jsx",[],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Login.jsx",[],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\state-actions\\post-action.jsx",["52","53"],"import axios from 'axios'\r\nimport axiosAuth from '../api/axiosAuth';\r\nimport {LOCAL_URL, USER_URL, POST_URL, DETAILS_URL} from '../constants/endpoints'\r\n\r\nexport const POST_REQ = \"POST_REQ\";\r\nexport const POST_SUC = \"POST_SUC\";\r\nexport const POST_FAIL = \"POST_FAIL\"; \r\n\r\nconst USER_ID = localStorage.getItem('user_id');\r\nconst POST_ID = localStorage.getItem('post_id');\r\n\r\n//GET Admin Post All\r\nexport const getPostsAll = (posts, history) => dispatch => {\r\n    dispatch({type:POST_REQ});\r\n    axiosAuth().get(`${LOCAL_URL}${POST_URL}`, posts)\r\n    .then(res => {\r\n        dispatch({type: POST_SUC, payload:res.data})\r\n    })\r\n    .catch(err => {\r\n        dispatch({type:POST_FAIL, payload:err.res});\r\n    });\r\n}\r\n//GET User's Post\r\nexport const getPostDetails = (posts) => dispatch => {\r\n    dispatch({type:POST_REQ});\r\n    axiosAuth().get(`${USER_URL}${USER_ID}${DETAILS_URL}`, posts)\r\n    .then(res => {\r\n        dispatch({type: POST_SUC, payload:res.data})\r\n    })\r\n    .catch(err => {\r\n        dispatch({type:POST_FAIL, payload:err.res});\r\n    });\r\n}\r\n\r\n//ADD User's Post\r\n\r\nexport const addPost = (post) => dispatch => {\r\n    dispatch({ type: POST_REQ })\r\n    axiosAuth().post(`${POST_URL}`, post)\r\n    .then(res => {\r\n        console.log(post)\r\n        console.log(`add post 43 ${res.data.posts} `)\r\n        dispatch({type:POST_SUC, payload:res.data.posts})\r\n    })\r\n    .catch(err => {\r\n        dispatch({type:POST_FAIL, payload:err})\r\n    })\r\n}\r\n\r\n//EDIT Posts\r\nexport const editPost = (post) => dispatch => {\r\n    dispatch({type:POST_REQ})\r\n    axiosAuth()\r\n    .put(`${POST_URL}${post.id}`, post)\r\n    .then(res => {\r\n        console.log(`edit post 57 ${res.data}`)\r\n        dispatch({type:POST_SUC, payload:res.data})\r\n    })\r\n    .catch(err => {\r\n        dispatch({type:POST_FAIL, payload:err})\r\n    })\r\n}\r\n//DELETE Posts\r\nexport const deletePost = (post) => dispatch => {\r\n    dispatch({type:POST_REQ})\r\n    axiosAuth()\r\n    .put(`${POST_URL}${post.id}`, post)\r\n    .then(res => {\r\n        console.log(`delete post 70 ${res.data}`)\r\n        dispatch({type:POST_SUC, payload:res.data})\r\n    })\r\n    .catch(err => {\r\n        dispatch({type:POST_FAIL, payload:err})\r\n    })\r\n}","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\constants\\inital-states.js",["54"],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\PostAdd.jsx",["55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":17},{"ruleId":"62","severity":1,"message":"67","line":7,"column":9,"nodeType":"64","messageId":"65","endLine":7,"endColumn":16},{"ruleId":"62","severity":1,"message":"68","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"62","severity":1,"message":"69","line":19,"column":5,"nodeType":"64","messageId":"65","endLine":19,"endColumn":11},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"70","line":10,"column":7,"nodeType":"64","messageId":"65","endLine":10,"endColumn":14},{"ruleId":"62","severity":1,"message":"71","line":1,"column":7,"nodeType":"64","messageId":"65","endLine":1,"endColumn":14},{"ruleId":"62","severity":1,"message":"72","line":2,"column":9,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":63,"column":29,"nodeType":"75","endLine":63,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":80,"column":29,"nodeType":"75","endLine":80,"endColumn":37},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'PostModel' is defined but never used.","'addPost' is defined but never used.","'React' is defined but never used.","'userID' is defined but never used.","'POST_ID' is assigned a value but never used.","'USER_ID' is assigned a value but never used.","'useHistory' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]