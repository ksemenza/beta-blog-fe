[{"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\index.js":"1","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Post.jsx":"2","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\utils\\PrivateRouter.jsx":"3","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\state-actions\\user-action.jsx":"4","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Header.jsx":"5","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\PostModel.jsx":"6","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Login.jsx":"7"},{"size":905,"mtime":1607472707372,"results":"8","hashOfConfig":"9"},{"size":931,"mtime":1607532655594,"results":"10","hashOfConfig":"9"},{"size":468,"mtime":1607472889145,"results":"11","hashOfConfig":"9"},{"size":3016,"mtime":1607527963136,"results":"12","hashOfConfig":"9"},{"size":467,"mtime":1607473893722,"results":"13","hashOfConfig":"9"},{"size":211,"mtime":1607529839783,"results":"14","hashOfConfig":"9"},{"size":2269,"mtime":1607472707370,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1tyi6e6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\index.js",[],["32","33"],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Post.jsx",["34","35","36"],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\utils\\PrivateRouter.jsx",[],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\state-actions\\user-action.jsx",["37","38"],"import axios from 'axios'\r\nimport React from 'react'\r\nimport {axiosAuth} from '../api/axiosAuth'\r\nimport {LOCAL_URL, REGISTER_URL, LOGIN_URL} from '../constants/endpoints'\r\n\r\n\r\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\r\n\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nlet userID\r\n\r\n//REGISTER USER START\r\nexport const registerUser = (newUser, history) => dispatch => {\r\n    console.log(`action register`)\r\n    dispatch({ type: REGISTER_REQUEST });\r\n    axios\r\n      .post(`${LOCAL_URL}${REGISTER_URL}`, newUser)\r\n      .then(res => {\r\n        dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n        localStorage.setItem('token',res.data.token)\r\n        history.push(\"/\");\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: REGISTER_FAILURE, payload:err.res });\r\n      });\r\n  };\r\n  \r\n  //LOGIN USER START\r\n  export const loginUser = (user, history) => dispatch => {\r\n    dispatch({ type: LOGIN_REQUEST });\r\n    axiosAuth().post(`${LOGIN_URL}`, user )\r\n    \r\n      .then(res => {\r\n          console.log(res.data.user.password)\r\n        localStorage.setItem('token', res.data.token)\r\n        localStorage.setItem('user_id', res.data.user.id)\r\n        localStorage.setItem('fname', res.data.user.first_name)\r\n        localStorage.setItem('lname', res.data.user.last_name)\r\n        localStorage.setItem('username', res.data.user.username)\r\n        localStorage.setItem('email', res.data.user.email)\r\n        localStorage.setItem('password', res.data.user.password)\r\n\r\n        dispatch({type:LOGIN_SUCCESS, payload: res.data})  \r\n        history.push('/homepage')\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: LOGIN_FAILURE, payload: err.res });\r\n      });\r\n  };\r\n  //LOGOUT USER START\r\n  export const logoutUser = (user, history) => dispatch => {\r\n    dispatch({ type: LOGOUT_REQUEST });\r\n    localStorage.removeItem(\"token\");\r\n    const tokenCheck = localStorage.getItem(\"token\");\r\n    if (tokenCheck === null) {\r\n      dispatch({ type: LOGOUT_SUCCESS })      \r\n    } else {\r\n      dispatch({ type: LOGOUT_FAILURE });\r\n    }\r\n  };\r\n\r\n    //CABINET USER START\r\n\r\n\r\n    /*\r\n    export const cabinetUser = (cabinet, history) => dispatch => {\r\n      let user_id = localStorage.get('user_id', res.data.id)\r\n      dispatch({ type: LOGIN_REQUEST });\r\n      axios.post(`http://localhost:7000/api/strains/${usre}`, cabinet )\r\n        .then(res => {\r\n          localStorage.setItem('user_id', res.data.id)\r\n          dispatch({type:CABINET_SUCCESS, payload: res.data})  \r\n          history.push('/cabinet')\r\n        })\r\n        .catch(err => {\r\n          dispatch({ type: CABINET_FAILURE, payload: err.data });\r\n        });\r\n    };\r\n  */","C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Header.jsx",[],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\PostModel.jsx",[],"C:\\Users\\Guin-Dev\\guin-dev-pro\\beta-blog-fe\\src\\components\\Login.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":13},{"ruleId":"43","severity":1,"message":"47","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":17},{"ruleId":"43","severity":1,"message":"48","line":9,"column":12,"nodeType":"45","messageId":"46","endLine":9,"endColumn":21},{"ruleId":"43","severity":1,"message":"49","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"43","severity":1,"message":"50","line":19,"column":5,"nodeType":"45","messageId":"46","endLine":19,"endColumn":11},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'PostModel' is defined but never used.","'userPosts' is assigned a value but never used.","'React' is defined but never used.","'userID' is defined but never used.","no-global-assign","no-unsafe-negation"]